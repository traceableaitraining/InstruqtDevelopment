#!/bin/bash
# Choose your zone and cluster name
ZONE="us-central1-a"
CLUSTERNAME="instruqt-cluster"

# Wait for Instruqt bootstrap to be complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
  echo "Waiting for Instruqt to finish booting the VM"
  sleep 1
done

# First we update the apt package manager cache
apt -y update

# Then we install some packages in noninteractive mode
DEBIAN_FRONTEND=noninteractive apt -y install curl wget htop jq vim git apt-transport-https ca-certificates gnupg

# Use the gcloud installation process described in the docs:
# https://cloud.google.com/sdk/docs/install#deb
echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -

# Configure the Helm repository
curl https://baltocdn.com/helm/signing.asc | apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list

# Update apt again and install gcloud, kubectl and helm
apt -y update
apt -y install google-cloud-cli kubectl helm unzip npm google-cloud-sdk-gke-gcloud-auth-plugin

# Fetch our Google Service Account credentials
mkdir -p /root/.config/gcloud
echo $INSTRUQT_GCP_PROJECT_GCPPROJECT_SERVICE_ACCOUNT_KEY | base64 -d | jq > /root/.config/gcloud/credentials

# Activate the service account
gcloud auth activate-service-account --key-file /root/.config/gcloud/credentials

# Set our project
gcloud config set project $INSTRUQT_GCP_PROJECT_GCPPROJECT_PROJECT_ID

# Create the GKE cluster
gcloud container clusters create $CLUSTERNAME --num-nodes=1 --zone $ZONE

# Get credentials for our cluster
gcloud container clusters get-credentials $CLUSTERNAME --zone $ZONE

# Install juice-shop
helm repo add securecodebox https://charts.securecodebox.io/
helm install my-juice-shop securecodebox/juice-shop --version 3.6.0

# Create values.yml
mkdir ./traceable
cat > ./traceable/values.yml <<EOF
token: 9MxUj70OpMIbw_eGtvYOWxomlG4tEsz-hN2RPo4AcmAuf
environment: $_SANDBOX_ID
EOF

# Create LB yml so traceable can access Juice Shop
# via the public internet
cat > ./traceable/lb-svc.yml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: juice-shop-lb
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: juice-shop
  ports:
  - protocol: TCP
    port: 30001
    targetPort: 3000
EOF

# standup GCP loadbalancer
kubectl apply -f ./traceable/lb-svc.yml

# grab LB IP
sleep 60
export LB=$(kubectl get svc | awk '{print $4}' | sed -n 2p)
export URL=$LB:30001

# Show the load balancer IP to the student
cat > /root/.bashrc << EOF
echo "Your public Juice Shop URL is: http://${URL}"
EOF

# install platform agent
helm repo add traceableai https://helm.traceable.ai
helm repo update
helm install --namespace traceableai traceable-agent traceableai/traceable-agent --create-namespace --values ./traceable/values.yml

# Expose juice-shop ports
nohup kubectl --namespace default port-forward --address "0.0.0.0" service/my-juice-shop 3000:3000 > foo.out 2> foo.err < /dev/null & disown

# install nodejs
apt install nodejs -y

# install newman CLI (postman)
npm install -g newman

# fetch JSON collections
wget https://gist.github.com/shloth/db57615e3c71d35177e781a49331d056/archive/8743857c46a3f70148ed2cbe956956e5bb48283d.zip
mv 8743857c46a3f70148ed2cbe956956e5bb48283d.zip /root/8743857c46a3f70148ed2cbe956956e5bb48283d.zip
unzip /root/8743857c46a3f70148ed2cbe956956e5bb48283d.zip
mv db57615e3c71d35177e781a49331d056-8743857c46a3f70148ed2cbe956956e5bb48283d/juice-shop-training.json ./juice-shop-training.json

wget https://gist.github.com/therealmark/3b1cd47f4da9012d503a2a9bb65c8acb/archive/0c7cef7fa338a85b3238dbdceca18107d5bedb58.zip
mv 0c7cef7fa338a85b3238dbdceca18107d5bedb58.zip /root/0c7cef7fa338a85b3238dbdceca18107d5bedb58.zip
unzip /root/0c7cef7fa338a85b3238dbdceca18107d5bedb58.zip
mv 3b1cd47f4da9012d503a2a9bb65c8acb-0c7cef7fa338a85b3238dbdceca18107d5bedb58/juiceshopattacks.json ./juiceshopattacks.json

rm -rf 0c7cef7fa338a85b3238dbdceca18107d5bedb58.zip
rm -rf db57615e3c71d35177e781a49331d056/archive/8743857c46a3f70148ed2cbe956956e5bb48283d.zip
rm -rf 3b1cd47f4da9012d503a2a9bb65c8acb-0c7cef7fa338a85b3238dbdceca18107d5bedb58

# create vars.json for newman
cat > ./vars.json <<EOF
{
  "values": [
    {
      "enabled": true,
      "key": "host",
      "value": "$LB:30001",
      "type": "text"
    },
    {
      "enabled": true,
      "key": "scheme",
      "value": "http",
      "type": "text"
    }
  ]
}
EOF

# echo URL into bashrc
export TRACEABLE_URL="https://app.traceable.ai/api-dashboard?time=1d&env=$_SANDBOX_ID"

cat > /root/.bashrc << EOF
echo "To visit the Traceable UI click this link: $TRACEABLE_URL"
EOF

EOF
# clean up
rm -rf 0c7cef7fa338a85b3238dbdceca18107d5bedb58
rm -rf ./traceable
rm foo.err && rm foo.out
rm 8743857c46a3f70148ed2cbe956956e5bb48283d.zip
rm -rf db57615e3c71d35177e781a49331d056-8743857c46a3f70148ed2cbe956956e5bb48283d
